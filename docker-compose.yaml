version: '3.4'

services:
  nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped
    env_file: .env
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./frontend/src:/var/www/html/
      - ./logs/nginx:/var/log/nginx/
      - ./infrastructure/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
      - "8443:443"
    networks:
    - xenbot
  
  # certbot:
  #   depends_on:
  #     - nginx
  #   image: certbot/certbot
  #   container_name: certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./certbot/conf/:/etc/letsencrypt
  #     - ./certbot/logs/:/var/log/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   # command: certbot --non-interactive --apache --agree-tos -m '{{ certbot_email }}' --domains '{{ certbot_domain }}' --redirect
  
  php:
    restart: unless-stopped
    env_file: .env
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    environment:
      - MYSQL_HOST=$MYSQL_HOST
      - MYSQL_USER_USERNAME=$MYSQL_USER_USERNAME
      - MYSQL_USER_PASSWORD=$MYSQL_USER_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_VERIFY_TABLE=$MYSQL_VERIFY_TABLE
      - MYSQL_CA=$MYSQL_CA
      - MYSQL_CLIENT_KEY=$MYSQL_CLIENT_KEY
      - MYSQL_CLIENT_CERT=$MYSQL_CLIENT_CERT
      - XEN_RECAPTCHA_SITEKEY=$XEN_RECAPTCHA_SITEKEY
      - XEN_RECAPTCHA_SECRET=$XEN_RECAPTCHA_SECRET
    depends_on:
      - database
    volumes:
      - ./frontend/src:/var/www/html/
      - ./certs:/etc/ssl/mysql
      - ./logs/php.log:/var/log/fpm-php.www.log
    ports:
      - 9000:9000
    networks:
    - xenbot
  
  database:
    image: percona/percona-xtradb-cluster:5.7
    restart: unless-stopped
    env_file: .env
    networks:
      - xenbot
    volumes:
      - ./infrastructure/database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
      - ./certs:/etc/ssl/mysql
    command:
      # - --ssl-ca=/etc/ssl/mysql/certs/ca.crt
      # - --ssl-ca=/etc/ssl/mysql/certs/ca.crt
      # - --ssl-cert=/etc/ssl/mysql/certs/client-cert.crt
      # - --ssl-key=/etc/ssl/mysql/certs/client-key.key
      # - --ssl=1
      # - --bind-address=0.0.0.0
    ports:
      - 3306:3306
  
  xen-enforce-bot:
    restart: unless-stopped
    env_file: .env
    networks:
      - xenbot
    build:
      context: ./xen-enforce-bot/
      dockerfile: ./Dockerfile
    volumes:
      - ./certs:/etc/ssl/mysql


networks:
  xenbot:
    # external: true
    name: xenbot_default
    driver: bridge

volumes:
  certbot-etc:
  wordpress:
  dbdata: